ARG PHP_VERSION=8.0.20

FROM php:${PHP_VERSION}-fpm-alpine

ARG APCU_VERSION=5.1.21
ARG APP_ENV=dev

RUN apk add --no-cache acl fcgi file gettext git;

RUN set -eux; \
	apk add --no-cache --virtual .build-deps $PHPIZE_DEPS icu-dev libzip-dev zlib-dev autoconf g++ make openssl-dev; \
	docker-php-ext-configure zip; \
	docker-php-ext-install -j$(nproc) intl zip; \
	docker-php-ext-install -j$(nproc) pdo pdo_mysql; \
	pecl install apcu-${APCU_VERSION}; \
	# pecl install mongodb; \
	pecl clear-cache; \
	docker-php-ext-enable apcu opcache; \
	# docker-php-ext-enable apcu opcache mongodb; \
	runDeps="$( \
		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \
			| tr ',' '\n' \
			| sort -u \
			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
	)"; \
	apk add --no-cache --virtual .phpexts-rundeps $runDeps; \
	apk del .build-deps

RUN apk add --no-cache libpng libpng-dev libjpeg-turbo-dev libwebp-dev zlib-dev libxpm-dev && docker-php-ext-install gd && apk del libpng-dev libjpeg-turbo-dev libwebp-dev zlib-dev libxpm-dev

COPY healthcheck.sh /usr/local/bin/docker-healthcheck
RUN chmod +x /usr/local/bin/docker-healthcheck

HEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD ["docker-healthcheck"]

RUN ln -s $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini
COPY ./symfony.${APP_ENV}.ini $PHP_INI_DIR/conf.d/symfony.ini

COPY ./php-fpm.conf /usr/local/etc/php-fpm.d/zz-docker.conf

COPY entrypoint.sh /usr/local/bin/docker-entrypoint
RUN chmod +x /usr/local/bin/docker-entrypoint

VOLUME /var/run/php

COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
ENV COMPOSER_ALLOW_SUPERUSER=1
ENV PATH="${PATH}:/root/.composer/vendor/bin"

ENTRYPOINT ["fixuid", "-q", "docker-entrypoint"]
CMD ["php-fpm"]